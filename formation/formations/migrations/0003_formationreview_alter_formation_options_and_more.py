# Generated by Django 5.2.1 on 2025-05-28 03:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('formations', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FormationReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note')),
                ('title', models.CharField(max_length=200, verbose_name="Titre de l'avis")),
                ('content', models.TextField(verbose_name="Contenu de l'avis")),
                ('is_verified', models.BooleanField(default=False, help_text="Avis d'un utilisateur ayant complété la formation", verbose_name='Avis vérifié')),
                ('is_approved', models.BooleanField(default=True, help_text='Avis approuvé pour publication', verbose_name='Approuvé')),
                ('helpful_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de votes utiles')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Avis de formation',
                'verbose_name_plural': 'Avis de formations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='formation',
            options={'ordering': ['-created_at'], 'verbose_name': 'Formation', 'verbose_name_plural': 'Formations'},
        ),
        migrations.AlterModelOptions(
            name='formationcategory',
            options={'ordering': ['name'], 'verbose_name': 'Catégorie de formation', 'verbose_name_plural': 'Catégories de formation'},
        ),
        migrations.AlterModelOptions(
            name='userformation',
            options={'ordering': ['-date_enrolled'], 'verbose_name': 'Inscription utilisateur', 'verbose_name_plural': 'Inscriptions utilisateur'},
        ),
        migrations.AddField(
            model_name='formation',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Afficher dans les formations mises en avant', verbose_name='En vedette'),
        ),
        migrations.AddField(
            model_name='formation',
            name='is_free',
            field=models.BooleanField(default=False, help_text='Formation gratuite', verbose_name='Gratuit'),
        ),
        migrations.AddField(
            model_name='formation',
            name='learning_objectives',
            field=models.TextField(blank=True, help_text="Ce que l'étudiant apprendra", verbose_name="Objectifs d'apprentissage"),
        ),
        migrations.AddField(
            model_name='formation',
            name='max_students',
            field=models.PositiveIntegerField(blank=True, help_text='Laisser vide pour illimité', null=True, verbose_name="Nombre maximum d'étudiants"),
        ),
        migrations.AddField(
            model_name='formation',
            name='meta_description',
            field=models.CharField(blank=True, help_text='Description pour les moteurs de recherche', max_length=160, verbose_name='Meta description'),
        ),
        migrations.AddField(
            model_name='formation',
            name='meta_keywords',
            field=models.CharField(blank=True, help_text='Mots-clés séparés par des virgules', max_length=255, verbose_name='Meta mots-clés'),
        ),
        migrations.AddField(
            model_name='formation',
            name='original_price',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Prix avant réduction', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix original'),
        ),
        migrations.AddField(
            model_name='formation',
            name='prerequisites',
            field=models.TextField(blank=True, help_text='Prérequis nécessaires pour suivre cette formation', verbose_name='Prérequis'),
        ),
        migrations.AddField(
            model_name='formation',
            name='published_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Date de publication'),
        ),
        migrations.AddField(
            model_name='formation',
            name='short_description',
            field=models.CharField(default='pas de description courte fournie', help_text='Résumé de la formation (max 300 caractères)', max_length=300, verbose_name='Description courte'),
        ),
        migrations.AddField(
            model_name='formation',
            name='slug',
            field=models.SlugField(blank=True, max_length=220, unique=True, verbose_name='Slug'),
        ),
        migrations.AddField(
            model_name='formation',
            name='status',
            field=models.CharField(choices=[('DRAFT', 'Brouillon'), ('PUBLISHED', 'Publié'), ('ARCHIVED', 'Archivé')], default='DRAFT', max_length=10, verbose_name='Statut'),
        ),
        migrations.AddField(
            model_name='formation',
            name='thumbnail',
            field=models.ImageField(blank=True, help_text='Image de couverture de la formation', upload_to='formations/thumbnails/', verbose_name='Miniature'),
        ),
        migrations.AddField(
            model_name='formationcategory',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='formationcategory',
            name='icon',
            field=models.CharField(blank=True, help_text="Classe CSS de l'icône (ex: fa-code)", max_length=50, verbose_name='Icône'),
        ),
        migrations.AddField(
            model_name='formationcategory',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='formationcategory',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL-friendly version du nom', max_length=120, unique=True, verbose_name='Slug'),
        ),
        migrations.AddField(
            model_name='formationcategory',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='userformation',
            name='amount_paid',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Montant payé'),
        ),
        migrations.AddField(
            model_name='userformation',
            name='certificate_issued',
            field=models.BooleanField(default=False, verbose_name='Certificat émis'),
        ),
        migrations.AddField(
            model_name='userformation',
            name='certificate_url',
            field=models.URLField(blank=True, verbose_name='URL du certificat'),
        ),
        migrations.AddField(
            model_name='userformation',
            name='completion_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Date de completion'),
        ),
        migrations.AddField(
            model_name='userformation',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='userformation',
            name='payment_method',
            field=models.CharField(blank=True, help_text='Ex: Orange Money, MTN Mobile Money, etc.', max_length=50, verbose_name='Méthode de paiement'),
        ),
        migrations.AddField(
            model_name='userformation',
            name='progress_percentage',
            field=models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Pourcentage de progression'),
        ),
        migrations.AddField(
            model_name='userformation',
            name='rating',
            field=models.PositiveIntegerField(blank=True, help_text='Note de 1 à 5 étoiles', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note'),
        ),
        migrations.AddField(
            model_name='userformation',
            name='review',
            field=models.TextField(blank=True, help_text='Commentaire sur la formation', verbose_name='Avis'),
        ),
        migrations.AddField(
            model_name='userformation',
            name='review_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name="Date de l'avis"),
        ),
        migrations.AddField(
            model_name='userformation',
            name='transaction_id',
            field=models.CharField(blank=True, help_text='Identifiant de la transaction de paiement', max_length=100, verbose_name='ID de transaction'),
        ),
        migrations.AddField(
            model_name='userformation',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='formation',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='formations.formationcategory', verbose_name='Catégorie'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='formation',
            name='description',
            field=models.TextField(help_text='Description détaillée de la formation', verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='difficulty',
            field=models.CharField(choices=[('DEBUTANT', 'Débutant'), ('INTERMEDIAIRE', 'Intermédiaire'), ('AVANCE', 'Avancé'), ('EXPERT', 'Expert')], default='DEBUTANT', max_length=13, verbose_name='Niveau de difficulté'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='duration',
            field=models.PositiveIntegerField(help_text='Durée en heures', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Durée'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Active'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='pdf_content',
            field=models.FileField(blank=True, help_text='Fichier PDF du contenu de formation', upload_to='formations/pdfs/', verbose_name='Contenu PDF'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='price',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Prix en francs CFA', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Prix (CFA)'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='title',
            field=models.CharField(help_text='Titre de la formation', max_length=200, verbose_name='Titre'),
        ),
        migrations.AlterField(
            model_name='formation',
            name='video_url',
            field=models.URLField(blank=True, help_text='Lien vers la vidéo de présentation', verbose_name='URL vidéo'),
        ),
        migrations.AlterField(
            model_name='formationcategory',
            name='description',
            field=models.TextField(blank=True, help_text='Description détaillée de la catégorie', verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='formationcategory',
            name='name',
            field=models.CharField(help_text='Nom de la catégorie de formation', max_length=100, verbose_name='Nom'),
        ),
        migrations.AlterField(
            model_name='userformation',
            name='completed',
            field=models.BooleanField(default=False, verbose_name='Terminé'),
        ),
        migrations.AlterField(
            model_name='userformation',
            name='date_enrolled',
            field=models.DateTimeField(auto_now_add=True, verbose_name="Date d'inscription"),
        ),
        migrations.AlterField(
            model_name='userformation',
            name='formation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formations.formation', verbose_name='Formation'),
        ),
        migrations.AlterField(
            model_name='userformation',
            name='payment_status',
            field=models.CharField(choices=[('PENDING', 'En attente'), ('COMPLETED', 'Complété'), ('FAILED', 'Échoué'), ('REFUNDED', 'Remboursé')], default='PENDING', max_length=10, verbose_name='Statut du paiement'),
        ),
        migrations.AlterField(
            model_name='userformation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur'),
        ),
        migrations.AddIndex(
            model_name='formation',
            index=models.Index(fields=['status', 'is_active'], name='formations__status_8aeb38_idx'),
        ),
        migrations.AddIndex(
            model_name='formation',
            index=models.Index(fields=['category', 'is_active'], name='formations__categor_5c0bfb_idx'),
        ),
        migrations.AddIndex(
            model_name='formation',
            index=models.Index(fields=['-created_at'], name='formations__created_3483fb_idx'),
        ),
        migrations.AddIndex(
            model_name='userformation',
            index=models.Index(fields=['user', 'payment_status'], name='formations__user_id_af521c_idx'),
        ),
        migrations.AddIndex(
            model_name='userformation',
            index=models.Index(fields=['formation', 'payment_status'], name='formations__formati_34a0f8_idx'),
        ),
        migrations.AddIndex(
            model_name='userformation',
            index=models.Index(fields=['-date_enrolled'], name='formations__date_en_ba2874_idx'),
        ),
        migrations.AddField(
            model_name='formationreview',
            name='user_formation',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='formations.userformation', verbose_name='Inscription'),
        ),
    ]
